name: dev

on:
  push:
    branches: [ dev ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest 

    env:
      Solution_Name: src\GenshinCompanion.sln
      Project_Path: src\GenshinCompanion\GenshinCompanion.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: Get Project Version
      uses: naminodarie/get-net-sdk-project-versions-action@v2
      id: get-version
      with:
        proj-path: ${{env.Project_Path}}

    - name: Setup NuGet
      uses: nuget/setup-nuget@v2

    - name: Restore dependencies
      run: dotnet restore $env:Solution_Name /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Build the application
      run: dotnet build --no-restore $env:Solution_Name /p:Configuration=$env:Configuration /p:DeployOnBuild=true /p:PublishProfile="win-x86.pubxml"
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Publish the application
      run: dotnet publish $env:Solution_Name /p:Configuration=$env:Configuration /p:PublishProfile="win-x86"
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: GenshinCompanion-${{steps.get-version.outputs.version}}-${{env.Configuration}}
        path: src\GenshinCompanion\bin\${{env.Configuration}}\net8.0-windows\publish\win-x86\
        retention-days: 90
        if-no-files-found: ignore
      env:
        Configuration: ${{ matrix.configuration }}